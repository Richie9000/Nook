/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF, useTexture, Decal } from "@react-three/drei";
import { useControls, } from "leva";

export default function Camisa(props) {
  const { nodes, materials } = useGLTF("/camisa.glb");
  const texture = useTexture(props.savedImage?.image || props.uploadedImage || "./nike2.jpg");  const decal = useRef()

  const {
    mangaDerColor,
    espaldaColor,
    frenteColor,
    cuelloColor,
    mangaIzqColor,
  } = props.colors;

  const { selectedFilter } = props;

  useControls({
    angle: {
      min: 0,
      max: Math.PI * 2,
      value: 1.4,
      step: 0.01,
      onChange: (value) => {
        const z = Math.cos(value);
        const y = Math.sin(value);
        const rot = Math.atan2(y, z);
        setPos((pos) => [pos[0], pos[1], z]);
      },
    },
    posY: {
      min: -3,
      max: 3,
      value:-.8,
      step: 0.01,
      onChange: (value) => {
        setPos((pos) => [value, -1.7, pos[2]]);
      },
    },
    scale: {
      min: 0.75,
      max: 3,
      value: 1.5,
      step: 0.01,
      onChange: (value) => {
        setScale(value);
      },
    },
    rotationX: {
      min: -Math.PI,
      max: Math.PI,
      value: 1.59,
      step: 0.01,
      onChange: (value) => {
        setRotation([value, rotation[1], rotation[2]]);
      },
    },
    rotationY: {
      min: -Math.PI,
      max: Math.PI,
      value: -.10,
      step: 0.01,
      onChange: (value) => {
        setRotation([rotation[0], value, rotation[2]]);
      },
    },
    rotationZ: {
      min: -Math.PI,
      max: Math.PI,
      value: 1.58,
      step: 0.01,
      onChange: (value) => {
        setRotation([rotation[0], rotation[1], value]);
      },
    },
  });


  const [pos, setPos] = useState ([-1.15, -3, -0.12])
  const [rotation, setRotation] = useState([1.513, 6.254, 1.6])
  const [scale, setScale] = useState(1)

  const [mangaDerMaterial] = useState(materials["Material.001"].clone());
  const [espaldaMaterial] = useState(materials["Material.001"].clone());
  const [frenteMaterial] = useState(materials["Material.001"].clone());
  const [cuelloMaterial] = useState(materials["Material.001"].clone());
  const [mangaIzqMaterial] = useState(materials["Material.001"].clone());

  mangaDerMaterial.color.set(mangaDerColor);
  espaldaMaterial.color.set(espaldaColor);
  frenteMaterial.color.set(frenteColor);
  cuelloMaterial.color.set(cuelloColor);
  mangaIzqMaterial.color.set(mangaIzqColor);

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Manga_der.geometry}
        material={mangaDerMaterial}
        position={[0.097, 0.129, -0.436]}
        rotation={[2.513, 1.554, 2.246]}
        scale={[0.505, 0.31, 0.677]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Espalda.geometry}
        material={espaldaMaterial}
        position={[0.095, 0.112, -0.42]}
        rotation={[2.513, 1.554, 2.246]}
        scale={[0.505, 0.318, 0.677]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Frente.geometry}
        material={frenteMaterial}
        position={[0.095, 0.114, -0.42]}
        rotation={[2.513, 1.554, 2.246]}
        scale={[0.505, 0.318, 0.677]}
      >
        <Decal
          ref={decal} 
          
          position={pos} 
          rotation={rotation} 
          scale={[scale, scale, scale]}
        >
          <meshBasicMaterial
            map={texture}
            polygonOffset
            polygonOffsetFactor={-1}
            className={props.selectedFilter}
          />
        </Decal>
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cuello.geometry}
        material={cuelloMaterial}
        position={[0.075, -0.166, 0.156]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.059, 0.052, 0.059]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Manga_izq.geometry}
        material={mangaIzqMaterial}
        position={[0.097, 0.108, -0.436]}
        rotation={[2.513, 1.554, 2.246]}
        scale={[0.505, 0.31, 0.677]}
      />
    </group>
  );
}

useGLTF.preload("/camisa.glb");